{"version":3,"sources":["webpack://namaz/webpack/universalModuleDefinition","webpack://namaz/webpack/bootstrap","webpack://namaz/./src/Coordinates.js","webpack://namaz/./src/MathUtils.js","webpack://namaz/./src/DateUtils.js","webpack://namaz/./src/Astronomical.js","webpack://namaz/./src/SolarCoordinates.js","webpack://namaz/./src/SolarTime.js","webpack://namaz/./src/TimeComponents.js","webpack://namaz/./src/Prayer.js","webpack://namaz/./src/Madhab.js","webpack://namaz/./src/PolarCircleResolution.js","webpack://namaz/./src/PrayerTimes.js","webpack://namaz/./src/HighLatitudeRule.js","webpack://namaz/./src/CalculationParameters.js","webpack://namaz/./src/CalculationMethod.js","webpack://namaz/./src/Qibla.js","webpack://namaz/./src/SunnahTimes.js","webpack://namaz/./src/Adhan.js"],"names":["Coordinates","constructor","latitude","longitude","degreesToRadians","degrees","Math","PI","radiansToDegrees","radians","normalizeToScale","number","max","floor","unwindAngle","angle","quadrantShiftAngle","round","dateByAddingDays","date","days","year","getFullYear","month","getMonth","day","getDate","hours","getHours","minutes","getMinutes","seconds","getSeconds","Date","dateByAddingMinutes","dateByAddingSeconds","getTime","roundedMinute","getUTCSeconds","offset","dayOfYear","returnedDayOfYear","feb","Astronomical","isLeapYear","months","i","isValidDate","isNaN","valueOf","meanSolarLongitude","julianCentury","T","term1","term2","term3","pow","L0","meanLunarLongitude","Lp","ascendingLunarNodeLongitude","term4","Omega","meanSolarAnomaly","M","solarEquationOfTheCenter","meanAnomaly","Mrad","sin","apparentSolarLongitude","meanLongitude","Lambda","meanObliquityOfTheEcliptic","apparentObliquityOfTheEcliptic","Epsilon0","O","cos","meanSiderealTime","JD","Theta","nutationInLongitude","solarLongitude","lunarLongitude","ascendingNode","nutationInObliquity","altitudeOfCelestialBody","observerLatitude","declination","localHourAngle","Phi","delta","H","asin","approximateTransit","siderealTime","rightAscension","L","Theta0","a2","Lw","correctedTransit","previousRightAscension","nextRightAscension","m0","a1","a3","a","interpolateAngles","dm","correctedHourAngle","coordinates","afterTransit","previousDeclination","nextDeclination","h0","d2","d1","d3","H0","acos","m","interpolate","h","y2","y1","y3","n","b","c","julianDay","trunc","x","ceil","Y","D","A","B","i0","i1","seasonAdjustedMorningTwilight","sunrise","abs","d","adjustment","dyy","daysSinceSolstice","seasonAdjustedEveningTwilight","sunset","northernOffset","southernOffset","daysInYear","SolarCoordinates","dPsi","dEpsilon","EpsilonApparent","atan2","apparentSiderealTime","SolarTime","observer","solar","prevSolar","nextSolar","solarAltitude","approxTransit","transit","hourAngle","afternoon","shadowLength","tangent","inverse","tan","atan","TimeComponents","utcDate","UTC","Prayer","SehriEnd","Fajr","FajrAzan","FajrEnd","Sunrise","Ishraq","IshraqStart","Zawal","Dhuhr","DhuhrAzan","DhuhrEnd","Asr","AsrAzan","AsrMakruh","Maghrib","Iftar","MaghribEnd","Isha","IshaAzan","IshaEnd","None","Madhab","Shafi","Hanafi","madhab","PolarCircleResolution","AqrabBalad","AqrabYaum","Unresolved","LATITUDE_VARIATION_STEP","UNSAFE_LATITUDE","isValidSolarTime","solarTime","aqrabYaumResolver","daysAdded","direction","testDate","setDate","tomorrow","tomorrowSolarTime","aqrabBaladResolver","sign","polarCircleResolvedValues","resolver","defaultReturn","PrayerTimes","calculationParameters","precise","fajrTime","sunriseTime","ishraqTime","dhuhrTime","asrTime","asrMakruhTime","maghribTime","ishaTime","nightFraction","sunsetTime","polarCircleResolver","polarCircleResolution","resolved","setTime","dateComponents","tomorrowSunrise","night","fajrAngle","ishraqAngle","asrMakruhAngle","method","safeFajr","portion","nightPortions","fajr","ishaInterval","ishaAngle","safeIsha","isha","maghribAngle","angleBasedMaghrib","fajrAdjustment","adjustments","methodAdjustments","sunriseAdjustment","dhuhrAdjustment","dhuhr","asrAdjustment","asr","maghribAdjustment","maghrib","ishaAdjustment","ishraqAdjustment","ishraq","asrMakruhAdjustment","asrMakruh","fajrPrecise","sunrisePrecise","dhuhrPrecise","asrPrecise","maghribPrecise","ishaPrecise","ishraqPrecise","asrMakruhPrecise","fajrRounded","sunriseRounded","dhuhrRounded","asrRounded","maghribRounded","ishaRounded","ishraqRounded","asrMakruhRounded","sehriEnd","fajrAzan","fajrEnd","ishraqStart","zawal","dhuhrAzan","dhuhrEnd","asrAzan","iftar","maghribEnd","ishaAzan","ishaEnd","timeForPrayer","prayer","currentPrayer","nextPrayer","HighLatitudeRule","MiddleOfTheNight","SeventhOfTheNight","TwilightAngle","recommended","CalculationParameters","methodName","highLatitudeRule","CalculationMethod","MuslimWorldLeague","params","Egyptian","Karachi","UmmAlQura","Dubai","MoonsightingCommittee","NorthAmerica","Kuwait","Qatar","Singapore","Tehran","Turkey","Other","qibla","makkah","SunnahTimes","prayerTimes","nextDay","nextDayPrayerTimes","nightDuration","middleOfTheNight","lastThirdOfTheNight","lastSixthOfTheNight","adhan","Qibla"],"mappings":"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","file":"Adhan.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"namaz\"] = factory();\n\telse\n\t\troot[\"namaz\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","export default class Coordinates {\n    constructor(latitude, longitude) {\n        this.latitude = latitude;\n        this.longitude = longitude;\n    }\n}\n","export function degreesToRadians(degrees) {\n    return (degrees * Math.PI) / 180.0;\n}\n\nexport function radiansToDegrees(radians) {\n    return (radians * 180.0) / Math.PI;\n}\n\nexport function normalizeToScale(number, max) {\n    return number - (max * (Math.floor(number / max)))\n}\n\nexport function unwindAngle(angle) {\n    return normalizeToScale(angle, 360.0);\n}\n\nexport function quadrantShiftAngle(angle) {\n    if (angle >= -180 && angle <= 180) {\n        return angle;\n    }\n\n    return angle - (360 * Math.round(angle/360));\n}\n","import Astronomical from './Astronomical';\n\nexport function dateByAddingDays(date, days) {\n    const year = date.getFullYear();\n    const month = date.getMonth();\n    const day = date.getDate() + days;\n    const hours = date.getHours();\n    const minutes = date.getMinutes();\n    const seconds = date.getSeconds();\n    return new Date(year, month, day, hours, minutes, seconds);\n}\n\nexport function dateByAddingMinutes(date, minutes) {\n    return dateByAddingSeconds(date, minutes * 60);\n}\n\nexport function dateByAddingSeconds(date, seconds) {\n    return new Date(date.getTime() + (seconds * 1000));\n}\n\nexport function roundedMinute(date) {\n    const seconds = date.getUTCSeconds();\n    const offset = seconds >= 30 ? 60 - seconds : -1 * seconds;\n    return dateByAddingSeconds(date, offset);\n}\n\nexport function dayOfYear(date) {\n    let returnedDayOfYear = 0;\n    const feb = Astronomical.isLeapYear(date.getFullYear()) ? 29 : 28;\n    const months = [31, feb, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    for (let i = 0; i < date.getMonth(); i++) {\n        returnedDayOfYear += months[i];\n    }\n\n    returnedDayOfYear += date.getDate();\n\n    return returnedDayOfYear;\n}\n\nexport function isValidDate(date) {\n    return date instanceof Date && !isNaN(date.valueOf());\n}\n","/* eslint-disable max-params, max-lines */\nimport { degreesToRadians, radiansToDegrees, unwindAngle, normalizeToScale, quadrantShiftAngle } from './MathUtils';\nimport { dateByAddingSeconds } from './DateUtils';\n\nconst Astronomical = {\n\n    /* The geometric mean longitude of the sun in degrees. */\n    meanSolarLongitude(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 163 */\n        const term1 = 280.4664567;\n        const term2 = 36000.76983 * T;\n        const term3 = 0.0003032 * Math.pow(T, 2);\n        const L0 = term1 + term2 + term3;\n        return unwindAngle(L0);\n    },\n\n    /* The geometric mean longitude of the moon in degrees. */\n    meanLunarLongitude(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 144 */\n        const term1 = 218.3165;\n        const term2 = 481267.8813 * T;\n        const Lp = term1 + term2;\n        return unwindAngle(Lp);\n    },\n\n    ascendingLunarNodeLongitude(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 144 */\n        const term1 = 125.04452;\n        const term2 = 1934.136261 * T;\n        const term3 = 0.0020708 * Math.pow(T, 2);\n        const term4 = Math.pow(T, 3) / 450000;\n        const Omega = term1 - term2 + term3 + term4;\n        return unwindAngle(Omega);\n    },\n\n    /* The mean anomaly of the sun. */\n    meanSolarAnomaly(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 163 */\n        const term1 = 357.52911;\n        const term2 = 35999.05029 * T;\n        const term3 = 0.0001537 * Math.pow(T, 2);\n        const M = term1 + term2 - term3;\n        return unwindAngle(M);\n    },\n\n    /* The Sun's equation of the center in degrees. */\n    solarEquationOfTheCenter(julianCentury, meanAnomaly) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 164 */\n        const Mrad = degreesToRadians(meanAnomaly);\n        const term1 = (1.914602 - (0.004817 * T) - (0.000014 * Math.pow(T, 2))) * Math.sin(Mrad);\n        const term2 = (0.019993 - (0.000101 * T)) * Math.sin(2 * Mrad);\n        const term3 = 0.000289 * Math.sin(3 * Mrad);\n        return term1 + term2 + term3;\n    },\n\n    /* The apparent longitude of the Sun, referred to the\n        true equinox of the date. */\n    apparentSolarLongitude(julianCentury, meanLongitude) {\n        const T = julianCentury;\n        const L0 = meanLongitude;\n        /* Equation from Astronomical Algorithms page 164 */\n        const longitude = L0 + Astronomical.solarEquationOfTheCenter(T, Astronomical.meanSolarAnomaly(T));\n        const Omega = 125.04 - (1934.136 * T);\n        const Lambda = longitude - 0.00569 - (0.00478 * Math.sin(degreesToRadians(Omega)));\n        return unwindAngle(Lambda);\n    },\n\n    /* The mean obliquity of the ecliptic, formula\n        adopted by the International Astronomical Union.\n        Represented in degrees. */\n    meanObliquityOfTheEcliptic(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 147 */\n        const term1 = 23.439291;\n        const term2 = 0.013004167 * T;\n        const term3 = 0.0000001639 * Math.pow(T, 2);\n        const term4 = 0.0000005036 * Math.pow(T, 3);\n        return term1 - term2 - term3 + term4;\n    },\n\n    /* The mean obliquity of the ecliptic, corrected for\n        calculating the apparent position of the sun, in degrees. */\n    apparentObliquityOfTheEcliptic(julianCentury, meanObliquityOfTheEcliptic) {\n        const T = julianCentury;\n        const Epsilon0 = meanObliquityOfTheEcliptic;\n        /* Equation from Astronomical Algorithms page 165 */\n        const O = 125.04 - (1934.136 * T);\n        return Epsilon0 + (0.00256 * Math.cos(degreesToRadians(O)));\n    },\n\n    /* Mean sidereal time, the hour angle of the vernal equinox, in degrees. */\n    meanSiderealTime(julianCentury) {\n        const T = julianCentury;\n        /* Equation from Astronomical Algorithms page 165 */\n        const JD = (T * 36525) + 2451545.0;\n        const term1 = 280.46061837;\n        const term2 = 360.98564736629 * (JD - 2451545);\n        const term3 = 0.000387933 * Math.pow(T, 2);\n        const term4 = Math.pow(T, 3) / 38710000;\n        const Theta = term1 + term2 + term3 - term4;\n        return unwindAngle(Theta)\n    },\n\n    nutationInLongitude(julianCentury, solarLongitude, lunarLongitude, ascendingNode) {\n        const L0 = solarLongitude;\n        const Lp = lunarLongitude;\n        const Omega = ascendingNode;\n        /* Equation from Astronomical Algorithms page 144 */\n        const term1 = (-17.2/3600) * Math.sin(degreesToRadians(Omega));\n        const term2 =  (1.32/3600) * Math.sin(2 * degreesToRadians(L0));\n        const term3 =  (0.23/3600) * Math.sin(2 * degreesToRadians(Lp));\n        const term4 =  (0.21/3600) * Math.sin(2 * degreesToRadians(Omega));\n        return term1 - term2 - term3 + term4;\n    },\n\n    nutationInObliquity(julianCentury, solarLongitude, lunarLongitude, ascendingNode) {\n        const L0 = solarLongitude;\n        const Lp = lunarLongitude;\n        const Omega = ascendingNode;\n        /* Equation from Astronomical Algorithms page 144 */\n        const term1 =  (9.2/3600) * Math.cos(degreesToRadians(Omega));\n        const term2 = (0.57/3600) * Math.cos(2 * degreesToRadians(L0));\n        const term3 = (0.10/3600) * Math.cos(2 * degreesToRadians(Lp));\n        const term4 = (0.09/3600) * Math.cos(2 * degreesToRadians(Omega));\n        return term1 + term2 + term3 - term4;\n    },\n\n    altitudeOfCelestialBody(observerLatitude, declination, localHourAngle) {\n        const Phi = observerLatitude;\n        const delta = declination;\n        const H = localHourAngle;\n        /* Equation from Astronomical Algorithms page 93 */\n        const term1 = Math.sin(degreesToRadians(Phi)) * Math.sin(degreesToRadians(delta));\n        const term2 = Math.cos(degreesToRadians(Phi)) * Math.cos(degreesToRadians(delta)) * Math.cos(degreesToRadians(H));\n        return radiansToDegrees(Math.asin(term1 + term2));\n    },\n\n    approximateTransit(longitude, siderealTime, rightAscension) {\n        const L = longitude;\n        const Theta0 = siderealTime;\n        const a2 = rightAscension;\n        /* Equation from page Astronomical Algorithms 102 */\n        const Lw = L * -1;\n        return normalizeToScale((a2 + Lw - Theta0) / 360, 1);\n    },\n\n    /* The time at which the sun is at its highest point in the sky (in universal time) */\n    correctedTransit(approximateTransit, longitude, siderealTime, rightAscension, previousRightAscension, nextRightAscension) {\n        const m0 = approximateTransit;\n        const L = longitude;\n        const Theta0 = siderealTime;\n        const a2 = rightAscension;\n        const a1 = previousRightAscension;\n        const a3 = nextRightAscension;\n        /* Equation from page Astronomical Algorithms 102 */\n        const Lw = L * -1;\n        const Theta = unwindAngle((Theta0 + (360.985647 * m0)));\n        const a = unwindAngle(Astronomical.interpolateAngles(a2, a1, a3, m0));\n        const H = quadrantShiftAngle(Theta - Lw - a);\n        const dm = H / -360;\n        return (m0 + dm) * 24;\n    },\n\n    correctedHourAngle(approximateTransit, angle, coordinates, afterTransit, siderealTime,\n                                    rightAscension, previousRightAscension, nextRightAscension, declination, previousDeclination, nextDeclination) {\n        const m0 = approximateTransit;\n        const h0 = angle;\n        const Theta0 = siderealTime;\n        const a2 = rightAscension;\n        const a1 = previousRightAscension;\n        const a3 = nextRightAscension;\n        const d2 = declination;\n        const d1 = previousDeclination;\n        const d3 = nextDeclination;\n\n        /* Equation from page Astronomical Algorithms 102 */\n        const Lw = coordinates.longitude * -1;\n        const term1 = Math.sin(degreesToRadians(h0)) - (Math.sin(degreesToRadians(coordinates.latitude)) * Math.sin(degreesToRadians(d2)));\n        const term2 = Math.cos(degreesToRadians(coordinates.latitude)) * Math.cos(degreesToRadians(d2));\n        const H0 = radiansToDegrees(Math.acos(term1 / term2));\n        const m = afterTransit ? m0 + (H0 / 360) : m0 - (H0 / 360);\n        const Theta = unwindAngle((Theta0 + (360.985647 * m)));\n        const a = unwindAngle(Astronomical.interpolateAngles(a2, a1, a3, m));\n        const delta = Astronomical.interpolate(d2, d1, d3, m);\n        const H = (Theta - Lw - a);\n        const h = Astronomical.altitudeOfCelestialBody(coordinates.latitude, delta, H);\n        const term3 = h - h0;\n        const term4 = 360 * Math.cos(degreesToRadians(delta)) * Math.cos(degreesToRadians(coordinates.latitude)) * Math.sin(degreesToRadians(H));\n        const dm = term3 / term4;\n        return (m + dm) * 24;\n    },\n\n    /* Interpolation of a value given equidistant\n        previous and next values and a factor\n        equal to the fraction of the interpolated\n        point's time over the time between values. */\n    interpolate(y2, y1, y3, n) {\n        /* Equation from Astronomical Algorithms page 24 */\n        const a = y2 - y1;\n        const b = y3 - y2;\n        const c = b - a;\n        return y2 + ((n/2) * (a + b + (n * c)));\n    },\n\n    /* Interpolation of three angles, accounting for\n        angle unwinding. */\n    interpolateAngles(y2, y1, y3, n) {\n        /* Equation from Astronomical Algorithms page 24 */\n        const a = unwindAngle(y2 - y1);\n        const b = unwindAngle(y3 - y2);\n        const c = b - a;\n        return y2 + ((n/2) * (a + b + (n * c)));\n    },\n\n    /* The Julian Day for the given Gregorian date components. */\n    julianDay(year, month, day, hours) {\n        /* Equation from Astronomical Algorithms page 60 */\n        if (typeof hours === 'undefined') {\n            hours = 0;\n        }\n\n        const trunc = Math.trunc || function (x) { return x < 0 ? Math.ceil(x) : Math.floor(x); };\n\n        const Y = trunc(month > 2 ? year : year - 1);\n        const M = trunc(month > 2 ? month : month + 12);\n        const D = day + (hours / 24);\n\n        const A = trunc(Y/100);\n        const B = trunc(2 - A + trunc(A/4));\n\n        const i0 = trunc(365.25 * (Y + 4716));\n        const i1 = trunc(30.6001 * (M + 1));\n\n        return i0 + i1 + D + B - 1524.5;\n    },\n\n    /* Julian century from the epoch. */\n    julianCentury(julianDay) {\n        /* Equation from Astronomical Algorithms page 163 */\n        return (julianDay - 2451545.0) / 36525;\n    },\n\n    /* Whether or not a year is a leap year (has 366 days). */\n    isLeapYear(year) {\n        if (year % 4 !== 0) {\n            return false;\n        }\n\n        if (year % 100 === 0 && year % 400 !== 0) {\n            return false;\n        }\n\n        return true;\n    },\n\n    seasonAdjustedMorningTwilight(latitude, dayOfYear, year, sunrise) {\n        const a = 75 + ((28.65 / 55.0) * Math.abs(latitude));\n        const b = 75 + ((19.44 / 55.0) * Math.abs(latitude));\n        const c = 75 + ((32.74 / 55.0) * Math.abs(latitude));\n        const d = 75 + ((48.10 / 55.0) * Math.abs(latitude));\n\n        const adjustment = (function() {\n            const dyy = Astronomical.daysSinceSolstice(dayOfYear, year, latitude);\n            if ( dyy < 91) {\n                return a + ( b - a ) / 91.0 * dyy;\n            } else if ( dyy < 137) {\n                return b + ( c - b ) / 46.0 * ( dyy - 91 );\n            } else if ( dyy < 183 ) {\n                return c + ( d - c ) / 46.0 * ( dyy - 137 );\n            } else if ( dyy < 229 ) {\n                return d + ( c - d ) / 46.0 * ( dyy - 183 );\n            } else if ( dyy < 275 ) {\n                return c + ( b - c ) / 46.0 * ( dyy - 229 );\n            } else {\n                return b + ( a - b ) / 91.0 * ( dyy - 275 );\n            }\n        })();\n\n        return dateByAddingSeconds(sunrise, Math.round(adjustment * -60.0));\n    },\n\n    seasonAdjustedEveningTwilight(latitude, dayOfYear, year, sunset) {\n        const a = 75 + ((25.60 / 55.0) * Math.abs(latitude));\n        const b = 75 + ((2.050 / 55.0) * Math.abs(latitude));\n        const c = 75 - ((9.210 / 55.0) * Math.abs(latitude));\n        const d = 75 + ((6.140 / 55.0) * Math.abs(latitude));\n\n        const adjustment = (function() {\n            const dyy = Astronomical.daysSinceSolstice(dayOfYear, year, latitude);\n            if ( dyy < 91) {\n                return a + ( b - a ) / 91.0 * dyy;\n            } else if ( dyy < 137) {\n                return b + ( c - b ) / 46.0 * ( dyy - 91 );\n            } else if ( dyy < 183 ) {\n                return c + ( d - c ) / 46.0 * ( dyy - 137 );\n            } else if ( dyy < 229 ) {\n                return d + ( c - d ) / 46.0 * ( dyy - 183 );\n            } else if ( dyy < 275 ) {\n                return c + ( b - c ) / 46.0 * ( dyy - 229 );\n            } else {\n                return b + ( a - b ) / 91.0 * ( dyy - 275 );\n            }\n        })();\n\n        return dateByAddingSeconds(sunset, Math.round(adjustment * 60.0));\n    },\n\n    daysSinceSolstice(dayOfYear, year, latitude) {\n        let daysSinceSolstice = 0;\n        const northernOffset = 10;\n        const southernOffset = Astronomical.isLeapYear(year) ? 173 : 172;\n        const daysInYear = Astronomical.isLeapYear(year) ? 366 : 365;\n\n        if (latitude >= 0) {\n            daysSinceSolstice = dayOfYear + northernOffset;\n            if (daysSinceSolstice >= daysInYear) {\n                daysSinceSolstice = daysSinceSolstice - daysInYear;\n            }\n        } else {\n            daysSinceSolstice = dayOfYear - southernOffset;\n            if (daysSinceSolstice < 0) {\n                daysSinceSolstice = daysSinceSolstice + daysInYear;\n            }\n        }\n\n        return daysSinceSolstice;\n    }\n};\n\nexport default Astronomical;","import Astronomical from './Astronomical';\nimport { degreesToRadians, radiansToDegrees, unwindAngle } from './MathUtils';\n\nexport default class SolarCoordinates {\n    constructor(julianDay) {\n        const T = Astronomical.julianCentury(julianDay);\n        const L0 = Astronomical.meanSolarLongitude(T);\n        const Lp = Astronomical.meanLunarLongitude(T);\n        const Omega = Astronomical.ascendingLunarNodeLongitude(T);\n        const Lambda = degreesToRadians(Astronomical.apparentSolarLongitude(T, L0));\n        const Theta0 = Astronomical.meanSiderealTime(T);\n        const dPsi = Astronomical.nutationInLongitude(T, L0, Lp, Omega);\n        const dEpsilon = Astronomical.nutationInObliquity(T, L0, Lp, Omega);\n        const Epsilon0 = Astronomical.meanObliquityOfTheEcliptic(T);\n        const EpsilonApparent = degreesToRadians(Astronomical.apparentObliquityOfTheEcliptic(T, Epsilon0));\n\n        /* declination: The declination of the sun, the angle between\n            the rays of the Sun and the plane of the Earth's\n            equator, in degrees.\n            Equation from Astronomical Algorithms page 165 */\n        this.declination = radiansToDegrees(Math.asin(Math.sin(EpsilonApparent) * Math.sin(Lambda)));\n\n        /* rightAscension: Right ascension of the Sun, the angular distance on the\n            celestial equator from the vernal equinox to the hour circle,\n            in degrees.\n            Equation from Astronomical Algorithms page 165 */\n        this.rightAscension = unwindAngle(radiansToDegrees(Math.atan2(Math.cos(EpsilonApparent) * Math.sin(Lambda), Math.cos(Lambda))));\n\n        /* apparentSiderealTime: Apparent sidereal time, the hour angle of the vernal\n            equinox, in degrees.\n            Equation from Astronomical Algorithms page 88 */\n        this.apparentSiderealTime = Theta0 + (((dPsi * 3600) * Math.cos(degreesToRadians(Epsilon0 + dEpsilon))) / 3600);\n    }\n}\n\n","import Astronomical from './Astronomical';\nimport { degreesToRadians, radiansToDegrees } from './MathUtils'\nimport SolarCoordinates from './SolarCoordinates';\n\nexport default class SolarTime {\n    constructor(date, coordinates) {\n\n        const julianDay = Astronomical.julianDay(date.getFullYear(), date.getMonth() + 1, date.getDate(), 0);\n        this.observer = coordinates;\n        this.solar = new SolarCoordinates(julianDay);\n\n        this.prevSolar = new SolarCoordinates(julianDay - 1);\n        this.nextSolar = new SolarCoordinates(julianDay + 1);\n\n        const m0 = Astronomical.approximateTransit(coordinates.longitude, this.solar.apparentSiderealTime, this.solar.rightAscension);\n        const solarAltitude = -50.0 / 60.0;\n\n        this.approxTransit = m0\n\n        this.transit = Astronomical.correctedTransit(m0, coordinates.longitude, this.solar.apparentSiderealTime,\n            this.solar.rightAscension, this.prevSolar.rightAscension, this.nextSolar.rightAscension);\n\n        this.sunrise = Astronomical.correctedHourAngle(m0, solarAltitude, coordinates, false, this.solar.apparentSiderealTime,\n            this.solar.rightAscension, this.prevSolar.rightAscension, this.nextSolar.rightAscension,\n            this.solar.declination, this.prevSolar.declination, this.nextSolar.declination);\n\n        this.sunset = Astronomical.correctedHourAngle(m0, solarAltitude, coordinates, true, this.solar.apparentSiderealTime,\n            this.solar.rightAscension, this.prevSolar.rightAscension, this.nextSolar.rightAscension,\n            this.solar.declination, this.prevSolar.declination, this.nextSolar.declination);\n    }\n\n    hourAngle(angle, afterTransit) {\n        return Astronomical.correctedHourAngle(this.approxTransit, angle, this.observer, afterTransit, this.solar.apparentSiderealTime,\n            this.solar.rightAscension, this.prevSolar.rightAscension, this.nextSolar.rightAscension,\n            this.solar.declination, this.prevSolar.declination, this.nextSolar.declination);\n    }\n\n    afternoon(shadowLength) {\n        // TODO source shadow angle calculation\n        const tangent = Math.abs(this.observer.latitude - this.solar.declination);\n        const inverse = shadowLength + Math.tan(degreesToRadians(tangent));\n        const angle = radiansToDegrees(Math.atan(1.0 / inverse));\n        return this.hourAngle(angle, true);\n    }\n}\n\n\n","export default class TimeComponents {\n    constructor(number) {\n        this.hours = Math.floor(number);\n        this.minutes = Math.floor((number - this.hours) * 60);\n        this.seconds = Math.floor((number - (this.hours + this.minutes / 60)) * 60 * 60);\n        return this;\n    }\n    \n    utcDate(year, month, date) {\n        return new Date(Date.UTC(year, month, date, this.hours, this.minutes, this.seconds));\n    }\n}\n","const Prayer = {\n    SehriEnd: 'sehriEnd',\n    Fajr: 'fajr',\n    FajrAzan: 'fajrAzan',\n    FajrEnd: 'fajrEnd',\n    Sunrise: 'sunrise',\n    Ishraq: 'ishraq',\n    IshraqStart: 'ishraqStart',\n    Zawal: 'zawal',\n    Dhuhr: 'dhuhr',\n    DhuhrAzan: 'dhuhrAzan',\n    DhuhrEnd: 'dhuhrEnd',\n    Asr: 'asr',\n    AsrAzan: 'asrAzan',\n    AsrMakruh: 'asrMakruh',\n    Maghrib: 'maghrib',\n    Iftar: 'iftar',\n    MaghribEnd: 'maghribEnd',\n    Isha: 'isha',\n    IshaAzan: 'ishaAzan',\n    IshaEnd: 'ishaEnd',\n    None: 'none'\n};\n\nexport default Prayer;","export const Madhab = {\n    Shafi: 'shafi',\n    Hanafi: 'hanafi'\n};\n\nexport function shadowLength(madhab) {\n    switch (madhab) {\n        case Madhab.Shafi:\n            return 1;\n        case Madhab.Hanafi:\n            return 2\n        default:\n            throw \"Invalid Madhab\";\n    }\n}\n","import SolarTime from './SolarTime';\nimport { dateByAddingDays } from './DateUtils';\n\nexport const PolarCircleResolution = {\n  AqrabBalad: 'AqrabBalad',\n  AqrabYaum: 'AqrabYaum',\n  Unresolved: 'Unresolved'\n};\n\nconst LATITUDE_VARIATION_STEP = 0.5; // Degrees to add/remove at each resolution step\nconst UNSAFE_LATITUDE = 65; // Based on https://en.wikipedia.org/wiki/Midnight_sun\n\nconst isValidSolarTime = (solarTime) => solarTime && !isNaN(solarTime.sunrise) && !isNaN(solarTime.sunset);\n\nconst aqrabYaumResolver = (coordinates, date, daysAdded = 1, direction = 1) => {\n  if (daysAdded > Math.ceil(365 / 2)) {\n    return null;\n  }\n  const testDate = new Date(date.getTime());\n  testDate.setDate(testDate.getDate() + (direction * daysAdded));\n  const tomorrow = dateByAddingDays(testDate, 1);\n  const solarTime = new SolarTime(testDate, coordinates);\n  const tomorrowSolarTime = new SolarTime(tomorrow, coordinates);\n\n  if (!isValidSolarTime(solarTime) || !isValidSolarTime(tomorrowSolarTime)) {\n    return aqrabYaumResolver(coordinates, date, daysAdded + (direction > 0 ? 0 : 1), -direction);\n  }\n\n  return {\n    date,\n    tomorrow,\n    coordinates,\n    solarTime,\n    tomorrowSolarTime,\n  };\n}\n\nconst aqrabBaladResolver = (coordinates, date, latitude) => {\n  const solarTime = new SolarTime(date, { ...coordinates, latitude });\n  const tomorrow = dateByAddingDays(date, 1);\n  const tomorrowSolarTime = new SolarTime(tomorrow, { ...coordinates, latitude });\n  if (!isValidSolarTime(solarTime) || !isValidSolarTime(tomorrowSolarTime)) {\n    return (Math.abs(latitude) >= UNSAFE_LATITUDE) ?\n      aqrabBaladResolver(coordinates, date, latitude - Math.sign(latitude) * LATITUDE_VARIATION_STEP)\n      : null;\n  }\n\n  return {\n    date,\n    tomorrow,\n    coordinates: { latitude, longitude: coordinates.longitude },\n    solarTime,\n    tomorrowSolarTime,\n  };\n};\n\nexport const polarCircleResolvedValues = (resolver, date, coordinates) => {\n  const defaultReturn = {\n    date,\n    tomorrow: dateByAddingDays(date, 1),\n    coordinates,\n    solarTime: new SolarTime(date, coordinates),\n    tomorrowSolarTime: new SolarTime(dateByAddingDays(date, 1), coordinates),\n  };\n\n  switch (resolver) {\n    case PolarCircleResolution.AqrabYaum: {\n      return aqrabYaumResolver(coordinates, date) || defaultReturn;\n    }\n    case PolarCircleResolution.AqrabBalad: {\n      const { latitude } = coordinates;\n      return aqrabBaladResolver(coordinates, date, latitude - (Math.sign(latitude) * LATITUDE_VARIATION_STEP)) || defaultReturn;\n    }\n    default: {\n      return defaultReturn;\n    }\n  }\n};\n","/* eslint-disable max-lines */\n/* eslint-disable complexity */\nimport SolarTime from './SolarTime';\nimport TimeComponents from './TimeComponents';\nimport Prayer from './Prayer';\nimport Astronomical from './Astronomical';\nimport {\n    dateByAddingDays,\n    dateByAddingMinutes,\n    dateByAddingSeconds,\n    roundedMinute,\n    dayOfYear,\n    isValidDate\n} from './DateUtils';\nimport { shadowLength } from './Madhab';\nimport {\n    PolarCircleResolution,\n    polarCircleResolvedValues\n} from './PolarCircleResolution';\n\nexport default class PrayerTimes {\n    // eslint-disable-next-line complexity\n    constructor(coordinates, date, calculationParameters, precise) {\n        this.coordinates = coordinates;\n        this.date = date;\n        this.calculationParameters = calculationParameters;\n        this.precise = precise || false;\n\n        let solarTime = new SolarTime(date, coordinates);\n\n        let fajrTime;\n        let sunriseTime;\n        let ishraqTime = \"00:00\";\n        let dhuhrTime;\n        let asrTime;\n        let asrMakruhTime = \"00:00\";\n        let maghribTime;\n        let ishaTime;\n\n        let nightFraction;\n\n        dhuhrTime = new TimeComponents(solarTime.transit).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n        sunriseTime = new TimeComponents(solarTime.sunrise).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n        let sunsetTime = new TimeComponents(solarTime.sunset).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n        let tomorrow = dateByAddingDays(date, 1);\n        let tomorrowSolarTime = new SolarTime(tomorrow, coordinates);\n\n        const polarCircleResolver = calculationParameters.polarCircleResolution;\n        if (\n            (!isValidDate(sunriseTime) || !isValidDate(sunsetTime) || isNaN(tomorrowSolarTime.sunrise))\n            && polarCircleResolver !== PolarCircleResolution.Unresolved\n        ) {\n            const resolved = polarCircleResolvedValues(polarCircleResolver, date, coordinates);\n            this.coordinates = resolved.coordinates;\n            this.date.setTime(resolved.date.getTime());\n            solarTime = resolved.solarTime;\n            tomorrow = resolved.tomorrow;\n            tomorrowSolarTime = resolved.tomorrowSolarTime;\n            const dateComponents = [date.getFullYear(), date.getMonth(), date.getDate()];\n\n            dhuhrTime = new TimeComponents(solarTime.transit).utcDate(...dateComponents);\n            sunriseTime = new TimeComponents(solarTime.sunrise).utcDate(...dateComponents);\n            sunsetTime = new TimeComponents(solarTime.sunset).utcDate(...dateComponents);\n        }\n\n        // eslint-disable-next-line prefer-const\n        asrTime = new TimeComponents(solarTime.afternoon(shadowLength(calculationParameters.madhab))).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n        const tomorrowSunrise = new TimeComponents(tomorrowSolarTime.sunrise).utcDate(tomorrow.getFullYear(), tomorrow.getMonth(), tomorrow.getDate());\n        const night = (tomorrowSunrise - sunsetTime) / 1000;\n\n        fajrTime = new TimeComponents(solarTime.hourAngle(-1 * calculationParameters.fajrAngle, false)).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n        ishraqTime = new TimeComponents(solarTime.hourAngle(-1 * calculationParameters.ishraqAngle, false)).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n        asrMakruhTime = new TimeComponents(solarTime.hourAngle(-1 * calculationParameters.asrMakruhAngle, true)).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n        // special case for moonsighting committee above latitude 55\n        if (calculationParameters.method === \"MoonsightingCommittee\" && coordinates.latitude >= 55) {\n            nightFraction = night / 7;\n            fajrTime = dateByAddingSeconds(sunriseTime, -nightFraction);\n        }\n\n        const safeFajr = (function () {\n            if (calculationParameters.method === \"MoonsightingCommittee\") {\n                return Astronomical.seasonAdjustedMorningTwilight(coordinates.latitude, dayOfYear(date), date.getFullYear(), sunriseTime);\n            }\n            else {\n                const portion = calculationParameters.nightPortions().fajr;\n                nightFraction = portion * night;\n                return dateByAddingSeconds(sunriseTime, -nightFraction);\n            }\n        })();\n\n        if (fajrTime === null || isNaN(fajrTime.getTime()) || safeFajr > fajrTime) {\n            fajrTime = safeFajr;\n        }\n\n        if (calculationParameters.ishaInterval > 0) {\n            ishaTime = dateByAddingMinutes(sunsetTime, calculationParameters.ishaInterval);\n        } else {\n            ishaTime = new TimeComponents(solarTime.hourAngle(-1 * calculationParameters.ishaAngle, true)).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n\n            // special case for moonsighting committee above latitude 55\n            if (calculationParameters.method === \"MoonsightingCommittee\" && coordinates.latitude >= 55) {\n                nightFraction = night / 7;\n                ishaTime = dateByAddingSeconds(sunsetTime, nightFraction);\n            }\n\n            const safeIsha = (function () {\n                if (calculationParameters.method === \"MoonsightingCommittee\") {\n                    return Astronomical.seasonAdjustedEveningTwilight(coordinates.latitude, dayOfYear(date), date.getFullYear(), sunsetTime);\n                }\n                else {\n                    const portion = calculationParameters.nightPortions().isha;\n                    nightFraction = portion * night;\n                    return dateByAddingSeconds(sunsetTime, nightFraction);\n                }\n            })();\n\n            if (ishaTime == null || isNaN(ishaTime.getTime()) || safeIsha < ishaTime) {\n                ishaTime = safeIsha;\n            }\n        }\n\n        maghribTime = sunsetTime;\n        if (calculationParameters.maghribAngle) {\n            const angleBasedMaghrib = new TimeComponents(solarTime.hourAngle(-1 * calculationParameters.maghribAngle, true)).utcDate(date.getFullYear(), date.getMonth(), date.getDate());\n            if (sunsetTime < angleBasedMaghrib && ishaTime > angleBasedMaghrib) {\n                maghribTime = angleBasedMaghrib;\n            }\n        }\n\n        const fajrAdjustment = (calculationParameters.adjustments.fajr || 0) + (calculationParameters.methodAdjustments.fajr || 0);\n        const sunriseAdjustment = (calculationParameters.adjustments.sunrise || 0) + (calculationParameters.methodAdjustments.sunrise || 0);\n        const dhuhrAdjustment = (calculationParameters.adjustments.dhuhr || 0) + (calculationParameters.methodAdjustments.dhuhr || 0);\n        const asrAdjustment = (calculationParameters.adjustments.asr || 0) + (calculationParameters.methodAdjustments.asr || 0);\n        const maghribAdjustment = (calculationParameters.adjustments.maghrib || 0) + (calculationParameters.methodAdjustments.maghrib || 0);\n        const ishaAdjustment = (calculationParameters.adjustments.isha || 0) + (calculationParameters.methodAdjustments.isha || 0);\n        const ishraqAdjustment = (calculationParameters.adjustments.ishraq || 0) + (calculationParameters.methodAdjustments.ishraq || 0);\n        const asrMakruhAdjustment = (calculationParameters.adjustments.asrMakruh || 0) + (calculationParameters.methodAdjustments.asrMakruh || 0);\n\n        const fajrPrecise = dateByAddingMinutes(fajrTime, fajrAdjustment);\n        const sunrisePrecise = dateByAddingMinutes(sunriseTime, sunriseAdjustment);\n        const dhuhrPrecise = dateByAddingMinutes(dhuhrTime, dhuhrAdjustment);\n        const asrPrecise = dateByAddingMinutes(asrTime, asrAdjustment);\n        const maghribPrecise = dateByAddingMinutes(maghribTime, maghribAdjustment);\n        const ishaPrecise = dateByAddingMinutes(ishaTime, ishaAdjustment);\n        const ishraqPrecise = dateByAddingMinutes(ishraqTime, ishraqAdjustment);\n        const asrMakruhPrecise = dateByAddingMinutes(asrMakruhTime, asrMakruhAdjustment);\n\n        const fajrRounded = roundedMinute(fajrPrecise);\n        const sunriseRounded = roundedMinute(sunrisePrecise);\n        const dhuhrRounded = roundedMinute(dhuhrPrecise);\n        const asrRounded = roundedMinute(asrPrecise);\n        const maghribRounded = roundedMinute(maghribPrecise);\n        const ishaRounded = roundedMinute(ishaPrecise);\n        const ishraqRounded = roundedMinute(ishraqPrecise);\n        const asrMakruhRounded = roundedMinute(asrMakruhPrecise);\n\n        if (precise) {\n            this.sehriEnd = dateByAddingMinutes(fajrPrecise, -1);\n            this.fajr = fajrPrecise;\n            this.fajrAzan = dateByAddingMinutes(fajrPrecise, +1);\n            this.fajrEnd = dateByAddingMinutes(sunrisePrecise, -1)\n            this.sunrise = sunrisePrecise;\n            this.ishraq = ishraqPrecise;\n            this.ishraqStart = dateByAddingMinutes(ishraqPrecise, +1);\n            this.zawal = dateByAddingMinutes(dhuhrPrecise, -4);\n            this.dhuhr = dateByAddingSeconds(dateByAddingMinutes(dhuhrPrecise, +1), 4);\n            this.dhuhrAzan = dateByAddingSeconds(dateByAddingMinutes(dhuhrPrecise, +2), 4);\n            this.dhuhrEnd = dateByAddingMinutes(asrPrecise, -1);\n            this.asr = asrPrecise;\n            this.asrMakruh = asrMakruhPrecise\n            this.asrAzan = dateByAddingMinutes(asrPrecise, +1);\n            this.maghrib = maghribPrecise;\n            this.iftar = dateByAddingMinutes(maghribPrecise, +1);\n            this.maghribEnd = dateByAddingMinutes(ishaPrecise, -1);\n            this.isha = ishaPrecise;\n            this.ishaAzan = dateByAddingMinutes(ishaPrecise, +1);\n            this.ishaEnd = this.sehriEnd; // TODO: Verify if this shows the time for next day's sehri\n        } else {\n\n\n            this.sehriEnd = dateByAddingMinutes(fajrRounded, -1);\n            this.fajr = fajrRounded;\n            this.fajrAzan = dateByAddingMinutes(fajrRounded, +1);\n            this.fajrEnd = dateByAddingMinutes(sunriseRounded, -1)\n            this.sunrise = sunriseRounded;\n            this.ishraq = ishraqRounded;\n            this.ishraqStart = dateByAddingMinutes(ishraqRounded, +1);\n            this.zawal = dateByAddingMinutes(dhuhrRounded, -4);\n            this.dhuhr = dateByAddingSeconds(dateByAddingMinutes(dhuhrRounded, +1), 4);\n            this.dhuhrAzan = dateByAddingSeconds(dateByAddingMinutes(dhuhrRounded, +2), 4);\n            this.dhuhrEnd = dateByAddingMinutes(asrRounded, -1);\n            this.asr = asrRounded;\n            this.asrMakruh = asrMakruhRounded\n            this.asrAzan = dateByAddingMinutes(asrRounded, +1);\n            this.maghrib = maghribRounded;\n            this.iftar = dateByAddingMinutes(maghribRounded, +1);\n            this.maghribEnd = dateByAddingMinutes(ishaRounded, -1);\n            this.isha = ishaRounded;\n            this.ishaAzan = dateByAddingMinutes(ishaRounded, +1);\n            this.ishaEnd = this.sehriEnd; // TODO: Verify if this shows the time for next day's sehri\n        }\n\n    }\n\n    timeForPrayer(prayer) {\n        if (prayer === Prayer.SehriEnd) {\n            return this.sehriEnd;\n        }\n        else if (prayer === Prayer.Fajr) {\n            return this.fajr;\n        }\n        else if (prayer === Prayer.FajrAzan) {\n            return this.fajrAzan;\n        }\n        else if (prayer === Prayer.FajrEnd) {\n            return this.fajrEnd;\n        }\n        else if (prayer === Prayer.Sunrise) {\n            return this.sunrise;\n        }\n        else if (prayer === Prayer.Ishraq) {\n            return this.ishraq;\n        }\n        else if (prayer === Prayer.IshraqStart) {\n            return this.ishraqStart;\n        }\n        else if (prayer === Prayer.Zawal) {\n            return this.zawal;\n        }\n        else if (prayer === Prayer.Dhuhr) {\n            return this.dhuhr;\n        }\n        else if (prayer === Prayer.DhuhrAzan) {\n            return this.dhuhrAzan;\n        }\n        else if (prayer === Prayer.DhuhrEnd) {\n            return this.dhuhrEnd;\n        }\n        else if (prayer === Prayer.Asr) {\n            return this.asr;\n        }\n        else if (prayer === Prayer.AsrAzan) {\n            return this.asrAzan;\n        }\n        else if (prayer === Prayer.AsrMakruh) {\n            return this.asrMakruh;\n        }\n        else if (prayer === Prayer.Maghrib) {\n            return this.maghrib;\n        }\n        else if (prayer === Prayer.Iftar) {\n            return this.iftar;\n        }\n        else if (prayer === Prayer.MaghribEnd) {\n            return this.maghribEnd;\n        }\n        else if (prayer === Prayer.Isha) {\n            return this.isha;\n        }\n        else if (prayer === Prayer.IshaAzan) {\n            return this.ishaAzan;\n        }\n        else if (prayer === Prayer.IshaEnd) { // TODO: Verify if this shows the time for next day's sehri/isha end or if we want to show next days time\n            return this.ishaEnd;\n        }\n        else {\n            return null;\n        }\n    }\n\n    currentPrayer(date) {\n        if (typeof date === 'undefined') {\n            date = new Date();\n        }\n        if (date >= this.ishaEnd) {\n            return Prayer.IshaEnd;\n        }\n        else if (date >= this.ishaAzan) {\n            return Prayer.IshaAzan;\n        }\n        else if (date >= this.isha) {\n            return Prayer.Isha;\n        }\n        else if (date >= this.maghribEnd) {\n            return Prayer.MaghribEnd;\n        }\n        else if (date >= this.iftar) {\n            return Prayer.Iftar;\n        }\n        else if (date >= this.maghrib) {\n            return Prayer.Maghrib;\n        }\n        else if (date >= this.asrMakruh) {\n            return Prayer.AsrMakruh;\n        }\n        else if (date >= this.asrAzan) {\n            return Prayer.AsrAzan;\n        }\n        else if (date >= this.asr) {\n            return Prayer.Asr;\n        }\n        else if (date >= this.dhuhrEnd) {\n            return Prayer.DhuhrEnd;\n        }\n        else if (date >= this.dhuhrAzan) {\n            return Prayer.DhuhrAzan;\n        }\n        else if (date >= this.dhuhr) {\n            return Prayer.Dhuhr;\n        }\n        else if (date >= this.zawal) {\n            return Prayer.Zawal;\n        }\n        else if (date >= this.ishraqStart) {\n            return Prayer.IshraqStart;\n        }\n        else if (date >= this.ishraq) {\n            return Prayer.Ishraq;\n        }\n        else if (date >= this.sunrise) {\n            return Prayer.Sunrise;\n        }\n        else if (date >= this.fajrEnd) {\n            return Prayer.FajrEnd;\n\n        }\n        else if (date >= this.fajrAzan) {\n            return Prayer.FajrAzan;\n        }\n        else if (date >= this.fajr) {\n            return Prayer.Fajr;\n        }\n        else if (date >= this.sehriEnd) {\n            return Prayer.SehriEnd;\n        }\n        else {\n            return Prayer.None;\n        }\n    }\n\n    nextPrayer(date) {\n        if (typeof date === 'undefined') {\n            date = new Date();\n        }\n        if (date >= this.isha) {\n            return Prayer.None;\n        }\n        else if (date >= this.maghrib) {\n            return Prayer.Isha;\n        }\n        else if (date >= this.asr) {\n            return Prayer.Maghrib;\n        }\n        else if (date >= this.dhuhr) {\n            return Prayer.Asr;\n        }\n        else if (date >= this.sunrise) {\n            return Prayer.Dhuhr;\n        }\n        else if (date >= this.fajr) {\n            return Prayer.Sunrise;\n        }\n        else {\n            return Prayer.Fajr;\n        }\n    }\n}\n","const HighLatitudeRule = {\n    MiddleOfTheNight: 'middleofthenight',\n    SeventhOfTheNight: 'seventhofthenight',\n    TwilightAngle: 'twilightangle',\n\n    recommended(coordinates) {\n        if (coordinates.latitude > 48) {\n            return HighLatitudeRule.SeventhOfTheNight;\n        } else {\n            return HighLatitudeRule.MiddleOfTheNight;\n        }\n    }\n};\n\nexport default HighLatitudeRule;","import { Madhab } from './Madhab';\nimport HighLatitudeRule from './HighLatitudeRule';\nimport { PolarCircleResolution } from './PolarCircleResolution';\n\nexport default class CalculationParameters {\n    constructor(methodName, fajrAngle, ishaAngle, ishaInterval, maghribAngle) {\n        this.method = methodName || \"Other\";\n        this.fajrAngle = fajrAngle || 0;\n        this.ishraqAngle = -1.4; //88.6; // Ishraq angle as per research of Hazrat Mufti Rashid Ahmed and Hazrat Syed Shabbir Ahmed KakaKhel (DBA). Only tested for Asian countries.\n        this.asrMakruhAngle = -2.3; // 87.7; // Asr Makrooh time angle as per research of Hazrat Mufti Rashid Ahmed and Hazrat Syed Shabbir Ahmed KakaKhel (DBA). Only tested for Asian countries.\n        this.ishaAngle = ishaAngle || 0;\n        this.ishaInterval = ishaInterval || 0;\n        this.maghribAngle = maghribAngle;\n        this.madhab = Madhab.Shafi;\n        this.highLatitudeRule = HighLatitudeRule.MiddleOfTheNight;\n        this.adjustments = { fajr: 0, sunrise: 0, dhuhr: 0, asr: 0, maghrib: 0, isha: 0 };\n        this.methodAdjustments = { fajr: 0, sunrise: 0, dhuhr: 0, asr: 0, maghrib: 0, isha: 0 };\n        this.polarCircleResolution = PolarCircleResolution.Unresolved;\n    }\n\n    nightPortions() {\n        switch (this.highLatitudeRule) {\n            case HighLatitudeRule.MiddleOfTheNight:\n                return { fajr: 1 / 2, isha: 1 / 2 };\n            case HighLatitudeRule.SeventhOfTheNight:\n                return { fajr: 1 / 7, isha: 1 / 7 };\n            case HighLatitudeRule.TwilightAngle:\n                return { fajr: this.fajrAngle / 60, isha: this.ishaAngle / 60 };\n            default:\n                throw (`Invalid high latitude rule found when attempting to compute night portions: ${this.highLatitudeRule}`);\n        }\n    }\n}\n","import CalculationParameters from './CalculationParameters';\n\nconst CalculationMethod = {\n    // Muslim World League\n    MuslimWorldLeague() {\n        const params = new CalculationParameters(\"MuslimWorldLeague\", 18, 17);\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // Egyptian General Authority of Survey\n    Egyptian() {\n        const params = new CalculationParameters(\"Egyptian\", 19.5, 17.5);\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // University of Islamic Sciences, Karachi\n    Karachi() {\n        const params = new CalculationParameters(\"Karachi\", 18, 18);\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // Umm al-Qura University, Makkah\n    UmmAlQura() {\n        return new CalculationParameters(\"UmmAlQura\", 18.5, 0, 90);\n    },\n\n    // Dubai\n    Dubai() {\n        const params = new CalculationParameters(\"Dubai\", 18.2, 18.2);\n        params.methodAdjustments = { sunrise: -3, dhuhr: 3, asr: 3, maghrib: 3 };\n        return params;\n    },\n\n    // Moonsighting Committee\n    MoonsightingCommittee() {\n        const params = new CalculationParameters(\"MoonsightingCommittee\", 18, 18);\n        params.methodAdjustments = { dhuhr: 5, maghrib: 3 };\n        return params;\n    },\n\n    // ISNA\n    NorthAmerica() {\n        const params = new CalculationParameters(\"NorthAmerica\", 15, 15);\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // Kuwait\n    Kuwait() {\n        return new CalculationParameters(\"Kuwait\", 18, 17.5);\n    },\n\n    // Qatar\n    Qatar() {\n        return new CalculationParameters(\"Qatar\", 18, 0, 90);\n    },\n\n    // Singapore\n    Singapore() {\n        const params = new CalculationParameters(\"Singapore\", 20, 18);\n        params.methodAdjustments = { dhuhr: 1 };\n        return params;\n    },\n\n    // Institute of Geophysics, University of Tehran\n    Tehran() {\n        const params = new CalculationParameters(\"Tehran\", 17.7, 14, 0, 4.5);\n        return params;\n    },\n\n    // Dianet\n    Turkey() {\n        const params = new CalculationParameters(\"Turkey\", 18, 17);\n        params.methodAdjustments = { sunrise: -7, dhuhr: 5, asr: 4, maghrib: 7 };\n        return params;\n    },\n\n    // Other\n    Other() {\n        return new CalculationParameters(\"Other\", 0, 0);\n    }\n};\n\nexport default CalculationMethod;","import Coordinates from './Coordinates'\nimport { degreesToRadians, radiansToDegrees, unwindAngle } from './MathUtils'\n\nexport default function qibla(coordinates) {\n    const makkah = new Coordinates(21.4225241, 39.8261818);\n\n    // Equation from \"Spherical Trigonometry For the use of colleges and schools\" page 50\n    const term1 = (\n        Math.sin(degreesToRadians(makkah.longitude) -\n        degreesToRadians(coordinates.longitude))\n    );\n    const term2 = (\n        Math.cos(degreesToRadians(coordinates.latitude)) *\n        Math.tan(degreesToRadians(makkah.latitude))\n    );\n    const term3 = (\n        Math.sin(degreesToRadians(coordinates.latitude)) *\n        Math.cos(degreesToRadians(makkah.longitude) -\n        degreesToRadians(coordinates.longitude))\n    );\n    const angle = Math.atan2(term1, term2 - term3);\n\n    return unwindAngle(radiansToDegrees(angle));\n}\n","import { dateByAddingDays, dateByAddingSeconds, roundedMinute } from './DateUtils';\nimport PrayerTimes from './PrayerTimes';\n\nexport default class SunnahTimes {\n    constructor(prayerTimes, precise = false) {\n        const date = prayerTimes.date;\n        const nextDay = dateByAddingDays(date, 1);\n        const nextDayPrayerTimes = new PrayerTimes(prayerTimes.coordinates, nextDay, prayerTimes.calculationParameters, prayerTimes.precise);\n\n        const nightDuration = (nextDayPrayerTimes.fajr.getTime() - prayerTimes.maghrib.getTime()) / 1000.0;\n\n        this.middleOfTheNight = precise ? dateByAddingSeconds(prayerTimes.maghrib, nightDuration / 2) : roundedMinute(dateByAddingSeconds(prayerTimes.maghrib, nightDuration / 2));\n        this.lastThirdOfTheNight = precise ? dateByAddingSeconds(prayerTimes.maghrib, nightDuration * (2 / 3)) : roundedMinute(dateByAddingSeconds(prayerTimes.maghrib, nightDuration * (2 / 3)));\n        this.lastSixthOfTheNight = precise ? dateByAddingSeconds(prayerTimes.maghrib, nightDuration * (5 / 6)) : roundedMinute(dateByAddingSeconds(prayerTimes.maghrib, nightDuration * (5 / 6)));\n    }\n}\n","import Coordinates from './Coordinates';\nimport PrayerTimes from './PrayerTimes';\nimport Prayer from './Prayer';\nimport { Madhab } from './Madhab';\nimport HighLatitudeRule from './HighLatitudeRule';\nimport CalculationMethod from './CalculationMethod';\nimport CalculationParameters from './CalculationParameters';\nimport Qibla from './Qibla';\nimport SunnahTimes from './SunnahTimes';\nimport { PolarCircleResolution } from './PolarCircleResolution';\n\nconst adhan = {\n    Prayer,\n    Madhab,\n    HighLatitudeRule,\n    Coordinates,\n    CalculationParameters,\n    CalculationMethod,\n    PrayerTimes,\n    SunnahTimes,\n    Qibla,\n    PolarCircleResolution,\n};\n\nexport default adhan;"],"sourceRoot":""}